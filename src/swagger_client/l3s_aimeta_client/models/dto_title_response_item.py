# coding: utf-8

"""
    L3S AI-Meta Service(AIMS) for SEARCH

    Welcome to the Swagger UI documentation site!  # noqa: E501

<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
    OpenAPI spec version: 0.0.2
=======
    OpenAPI spec version: 0.0.3
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
class DtoTitleResponse(object):
=======
class DtoTitleResponseItem(object):
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'task_id': 'str',
        'title': 'list[str]'
    }

    attribute_map = {
        'task_id': 'task_id',
        'title': 'title'
    }

    def __init__(self, task_id=None, title=None):  # noqa: E501
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        """DtoTitleResponse - a model defined in Swagger"""  # noqa: E501
=======
        """DtoTitleResponseItem - a model defined in Swagger"""  # noqa: E501
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
        self._task_id = None
        self._title = None
        self.discriminator = None
        if task_id is not None:
            self.task_id = task_id
        if title is not None:
            self.title = title

    @property
    def task_id(self):
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        """Gets the task_id of this DtoTitleResponse.  # noqa: E501

        The task ID  # noqa: E501

        :return: The task_id of this DtoTitleResponse.  # noqa: E501
=======
        """Gets the task_id of this DtoTitleResponseItem.  # noqa: E501

        The task ID  # noqa: E501

        :return: The task_id of this DtoTitleResponseItem.  # noqa: E501
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
        :rtype: str
        """
        return self._task_id

    @task_id.setter
    def task_id(self, task_id):
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        """Sets the task_id of this DtoTitleResponse.

        The task ID  # noqa: E501

        :param task_id: The task_id of this DtoTitleResponse.  # noqa: E501
=======
        """Sets the task_id of this DtoTitleResponseItem.

        The task ID  # noqa: E501

        :param task_id: The task_id of this DtoTitleResponseItem.  # noqa: E501
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
        :type: str
        """

        self._task_id = task_id

    @property
    def title(self):
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        """Gets the title of this DtoTitleResponse.  # noqa: E501

        List of Titles for given task  # noqa: E501

        :return: The title of this DtoTitleResponse.  # noqa: E501
=======
        """Gets the title of this DtoTitleResponseItem.  # noqa: E501

        List of Titles for given task  # noqa: E501

        :return: The title of this DtoTitleResponseItem.  # noqa: E501
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
        :rtype: list[str]
        """
        return self._title

    @title.setter
    def title(self, title):
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        """Sets the title of this DtoTitleResponse.

        List of Titles for given task  # noqa: E501

        :param title: The title of this DtoTitleResponse.  # noqa: E501
=======
        """Sets the title of this DtoTitleResponseItem.

        List of Titles for given task  # noqa: E501

        :param title: The title of this DtoTitleResponseItem.  # noqa: E501
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
        :type: list[str]
        """

        self._title = title

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        if issubclass(DtoTitleResponse, dict):
=======
        if issubclass(DtoTitleResponseItem, dict):
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_title_response.py
        if not isinstance(other, DtoTitleResponse):
=======
        if not isinstance(other, DtoTitleResponseItem):
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/dto_title_response_item.py
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
