# coding: utf-8

"""
    L3S AI-Meta Service(AIMS) for SEARCH

    Welcome to the Swagger UI documentation site!  # noqa: E501

<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
    OpenAPI spec version: 0.0.2
=======
    OpenAPI spec version: 0.0.3
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from l3s_aimeta_client.models.dto_content_tags_response_item import DtoContentTagsResponseItem  # noqa: F401,E501

<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
class DtoJobsSearchResponse(object):
=======
class AllOfDtoContentTagsResponseResults(DtoContentTagsResponseItem):
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
        'job_offers': 'list[object]'
=======
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py
    }
    if hasattr(DtoContentTagsResponseItem, "swagger_types"):
        swagger_types.update(DtoContentTagsResponseItem.swagger_types)

    attribute_map = {
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
        'job_offers': 'job_offers'
=======
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py
    }
    if hasattr(DtoContentTagsResponseItem, "attribute_map"):
        attribute_map.update(DtoContentTagsResponseItem.attribute_map)

<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
    def __init__(self, job_offers=None):  # noqa: E501
        """DtoJobsSearchResponse - a model defined in Swagger"""  # noqa: E501
        self._job_offers = None
        self.discriminator = None
        if job_offers is not None:
            self.job_offers = job_offers

    @property
    def job_offers(self):
        """Gets the job_offers of this DtoJobsSearchResponse.  # noqa: E501


        :return: The job_offers of this DtoJobsSearchResponse.  # noqa: E501
        :rtype: list[object]
        """
        return self._job_offers

    @job_offers.setter
    def job_offers(self, job_offers):
        """Sets the job_offers of this DtoJobsSearchResponse.


        :param job_offers: The job_offers of this DtoJobsSearchResponse.  # noqa: E501
        :type: list[object]
        """

        self._job_offers = job_offers
=======
    def __init__(self, *args, **kwargs):  # noqa: E501
        """AllOfDtoContentTagsResponseResults - a model defined in Swagger"""  # noqa: E501
        self.discriminator = None
        DtoContentTagsResponseItem.__init__(self, *args, **kwargs)
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
        if issubclass(DtoJobsSearchResponse, dict):
=======
        if issubclass(AllOfDtoContentTagsResponseResults, dict):
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
<<<<<<< HEAD:src/swagger_client/l3s_aimeta_client/models/dto_jobs_search_response.py
        if not isinstance(other, DtoJobsSearchResponse):
=======
        if not isinstance(other, AllOfDtoContentTagsResponseResults):
>>>>>>> ebc085ac2e497beb2b7e5986f671123b931ecedf:src/swagger_client/l3s_aimeta_client/models/all_of_dto_content_tags_response_results.py
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
