# coding: utf-8

"""
    MLS2 API

    Central API  # noqa: E501

    OpenAPI spec version: 0.7.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UserChangeRequestJsonldUserChangeRequestRead(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'type': 'str',
        'context': 'OneOfUserChangeRequestJsonldUserChangeRequestReadContext',
        'id': 'int',
        'user': 'UserJsonldUserChangeRequestRead',
        'confirm_user': 'AnyOfUserChangeRequestJsonldUserChangeRequestReadConfirmUser',
        'action': 'str',
        'value': 'str',
        'is_accepted': 'bool',
        'accepted_at': 'datetime',
        'created_at': 'datetime',
        'updated_at': 'datetime'
    }

    attribute_map = {
        'id': '@id',
        'type': '@type',
        'context': '@context',
        'id': 'id',
        'user': 'user',
        'confirm_user': 'confirmUser',
        'action': 'action',
        'value': 'value',
        'is_accepted': 'isAccepted',
        'accepted_at': 'acceptedAt',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }

    def __init__(self, id=None, type=None, context=None, id=None, user=None, confirm_user=None, action=None, value=None, is_accepted=None, accepted_at=None, created_at=None, updated_at=None):  # noqa: E501
        """UserChangeRequestJsonldUserChangeRequestRead - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._type = None
        self._context = None
        self._id = None
        self._user = None
        self._confirm_user = None
        self._action = None
        self._value = None
        self._is_accepted = None
        self._accepted_at = None
        self._created_at = None
        self._updated_at = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if type is not None:
            self.type = type
        if context is not None:
            self.context = context
        if id is not None:
            self.id = id
        if user is not None:
            self.user = user
        if confirm_user is not None:
            self.confirm_user = confirm_user
        if action is not None:
            self.action = action
        if value is not None:
            self.value = value
        if is_accepted is not None:
            self.is_accepted = is_accepted
        if accepted_at is not None:
            self.accepted_at = accepted_at
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at

    @property
    def id(self):
        """Gets the id of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The id of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserChangeRequestJsonldUserChangeRequestRead.


        :param id: The id of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The type of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UserChangeRequestJsonldUserChangeRequestRead.


        :param type: The type of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def context(self):
        """Gets the context of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The context of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: OneOfUserChangeRequestJsonldUserChangeRequestReadContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this UserChangeRequestJsonldUserChangeRequestRead.


        :param context: The context of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: OneOfUserChangeRequestJsonldUserChangeRequestReadContext
        """

        self._context = context

    @property
    def id(self):
        """Gets the id of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The id of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserChangeRequestJsonldUserChangeRequestRead.


        :param id: The id of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def user(self):
        """Gets the user of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The user of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: UserJsonldUserChangeRequestRead
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this UserChangeRequestJsonldUserChangeRequestRead.


        :param user: The user of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: UserJsonldUserChangeRequestRead
        """

        self._user = user

    @property
    def confirm_user(self):
        """Gets the confirm_user of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The confirm_user of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: AnyOfUserChangeRequestJsonldUserChangeRequestReadConfirmUser
        """
        return self._confirm_user

    @confirm_user.setter
    def confirm_user(self, confirm_user):
        """Sets the confirm_user of this UserChangeRequestJsonldUserChangeRequestRead.


        :param confirm_user: The confirm_user of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: AnyOfUserChangeRequestJsonldUserChangeRequestReadConfirmUser
        """

        self._confirm_user = confirm_user

    @property
    def action(self):
        """Gets the action of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The action of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this UserChangeRequestJsonldUserChangeRequestRead.


        :param action: The action of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: str
        """

        self._action = action

    @property
    def value(self):
        """Gets the value of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The value of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UserChangeRequestJsonldUserChangeRequestRead.


        :param value: The value of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: str
        """

        self._value = value

    @property
    def is_accepted(self):
        """Gets the is_accepted of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The is_accepted of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: bool
        """
        return self._is_accepted

    @is_accepted.setter
    def is_accepted(self, is_accepted):
        """Sets the is_accepted of this UserChangeRequestJsonldUserChangeRequestRead.


        :param is_accepted: The is_accepted of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: bool
        """

        self._is_accepted = is_accepted

    @property
    def accepted_at(self):
        """Gets the accepted_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The accepted_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: datetime
        """
        return self._accepted_at

    @accepted_at.setter
    def accepted_at(self, accepted_at):
        """Sets the accepted_at of this UserChangeRequestJsonldUserChangeRequestRead.


        :param accepted_at: The accepted_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: datetime
        """

        self._accepted_at = accepted_at

    @property
    def created_at(self):
        """Gets the created_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The created_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UserChangeRequestJsonldUserChangeRequestRead.


        :param created_at: The created_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501


        :return: The updated_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this UserChangeRequestJsonldUserChangeRequestRead.


        :param updated_at: The updated_at of this UserChangeRequestJsonldUserChangeRequestRead.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UserChangeRequestJsonldUserChangeRequestRead, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UserChangeRequestJsonldUserChangeRequestRead):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
